<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
       http://www.springframework.org/schema/context 
       http://www.springframework.org/schema/context/spring-context-4.0.xsd
       http://www.springframework.org/schema/mvc
	   http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd">
    
    
    <mvc:annotation-driven>
    	<!--enableMatrixVariables="true">-->
    	<mvc:message-converters register-defaults="true">
    		<!-- StringHttpMessageConverter编码为UTF-8，防止乱码 -->
    		<bean class="org.springframework.http.converter.StringHttpMessageConverter">
    			<constructor-arg value="UTF-8"/>
    			<property name="supportedMediaTypes">
    				<list>
    					<bean class="org.springframework.http.MediaType">
    						<constructor-arg index="0" value="text"/>
    						<constructor-arg index="1" value="plain"/>
    						<constructor-arg index="2" value="UTF-8"/>
    					</bean>
    					
    					<bean class="org.springframework.http.MediaType">
    						<constructor-arg index="0" value="*"/>
    						<constructor-arg index="1" value="*"/>
    						<constructor-arg index="2" value="UTF-8"/>
    					</bean>
    				</list>
    			</property>
    		</bean>
    		 <!-- 避免IE执行AJAX时,返回JSON出现下载文件 -->
    		<bean id="fastJsonHttpMessageConverter" class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter">
    			<property name="supportedMediaTypes">
    				<list>
    					<value>application/json;charset=UTF-8</value>
    				</list>
    			</property>
    			<!--<property name="serializerFeature">-->
                <!--这个地方加上这个功能吧，能自己配置一些东西，比如时间的格式化，null输出""等等-->
                <!--</property>-->
    		</bean>
    	</mvc:message-converters>
    </mvc:annotation-driven>
    
      
	<!-- 自动扫描该包，使SpringMVC认为包下用了@controller注解的类是控制器 -->  
    <context:component-scan base-package="com.hadoop.web" />
    
    <!-- 权限验证拦截器 -->
    <!--  
    <mvc:interceptors>
    	<bean class="com.hadoop.interceptor.AuthInterceptor" />
    </mvc:interceptors>
    -->
    
    <!-- 配置静态资源  -->
    <mvc:resources mapping="/js/**" location="/js/" cache-period="31556926" />    
    <mvc:resources mapping="/imgs/**" location="/imgs/" cache-period="31556926" />   
    <mvc:resources mapping="/css/**" location="/css/" cache-period="31556926" />

    
    <!--避免IE执行AJAX时，返回JSON出现下载文件 -->
    <!-- 
    <bean id="mappingJacksonHttpMessageConverter"  
        class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">  
        <property name="supportedMediaTypes">  
            <list>  
                <value>text/html;charset=UTF-8</value>  
            </list>  
        </property>  
    </bean>
     --> 
    
    <!-- 启动SpringMVC的注解功能，完成请求和注解POJO的映射 -->  
    <!--  
    <bean  
        class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">  
        <property name="messageConverters">  
            <list>
               <ref bean="mappingJacksonHttpMessageConverter" />  
               <ref bean="stringConverter" />
            </list>  
        </property>  
    </bean>  
	-->
    
    <!-- 
    	模型解析，在请求时为模型视图名称添加前后缀 
    	比如在controller类中需要请求/WEB-INF/page/index.jsp文件，直接写index就可以了
    -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver"
    	p:viewClass="org.springframework.web.servlet.view.JstlView" 
     	p:prefix="/WEB-INF/jsp/"
     	p:suffix=".jsp" />
     	
    
    <!-- 异常处理 -->  
    <bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">      
        <property name="exceptionMappings">      
            <props>      
                <prop key="org.apache.shiro.authz.UnauthorizedException">error/403</prop>      
            </props>      
        </property>      
    </bean> 
</beans>